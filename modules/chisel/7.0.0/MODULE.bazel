module(
    name = "chisel",
    version = "7.0.0",
    bazel_compatibility = [">=7.5.0"],
)

bazel_dep(name = "rules_jvm_external", version = "6.4")
bazel_dep(name = "rules_scala")

git_override(
    module_name = "rules_scala",
    commit = "84e3f449011cc2aca7f518ddd8dc7f25a46f8515",
    remote = "https://github.com/bazelbuild/rules_scala",
)

SCALA_VERSION = "2.13.16"

SCALA_VERSION_SHORT = SCALA_VERSION.rpartition(".")[0]

scala_config = use_extension(
    "@rules_scala//scala/extensions:config.bzl",
    "scala_config",
)
scala_config.settings(
    scala_version = SCALA_VERSION,
)
use_repo(scala_config, "rules_scala_config")

scala_deps = use_extension(
    "@rules_scala//scala/extensions:deps.bzl",
    "scala_deps",
)
scala_deps.settings(
    fetch_sources = True,
)
scala_deps.scala()
scala_deps.scalatest()

MAVEN_DEPS = {
    "org.apache.commons:commons-text": "1.12.0",
    "org.scala-lang:scala-compiler": SCALA_VERSION,
    "org.scala-lang:scala-library": SCALA_VERSION,
    "org.scala-lang:scala-reflect": SCALA_VERSION,
}

MAVEN_SHORT_DEPS = {
    "com.github.scopt:scopt": "4.1.0",
    "com.lihaoyi:os-lib": "0.10.0",
    "com.lihaoyi:ujson": "4.1.0",
    "com.lihaoyi:upickle": "4.1.0",
    "org.json4s:json4s-native": "4.0.7",
    "org.chipsalliance:firtool-resolver": "2.0.1",
}

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = ["{}_{}:{}".format(dep, SCALA_VERSION_SHORT, version) for (dep, version) in MAVEN_SHORT_DEPS.items()] +
                ["{}:{}".format(dep, version) for (dep, version) in MAVEN_DEPS.items()],
    fetch_sources = True,
)
use_repo(maven, "maven")
